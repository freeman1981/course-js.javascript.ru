{"version":3,"sources":["webpack:///./src/components/sortable-table/index.js","webpack:///./src/components/range-picker/index.js","webpack:///./src/pages/sales/header.js","webpack:///./src/pages/sales/index.js","webpack:///./src/utils/fetch-json.js"],"names":["SortableTable","constructor","headersConfig","url","sorted","id","find","item","sortable","order","isSortLocally","step","start","end","from","to","filtered","this","async","bottom","element","getBoundingClientRect","document","documentElement","clientHeight","loading","data","loadData","update","event","column","target","closest","dataset","newOrder","asc","desc","toggleOrder","append","subElements","arrow","sortLocally","sortOnServer","URL","process","render","wrapper","createElement","innerHTML","getTable","firstElementChild","getSubElements","renderRows","initEventListeners","searchParams","set","price_gte","price_lte","title_like","status","classList","add","fetchJson","remove","addRows","body","getTableRows","length","rows","childNodes","getTableHeader","map","getHeaderRow","join","title","getHeaderSortingArrow","getTableBody","getTableRow","template","header","addEventListener","onSortClick","onWindowScroll","sortedData","sortData","arr","sortType","customSorting","direction","sort","a","b","localeCompare","querySelectorAll","reduce","accum","subElement","removeEventListener","destroy","RangePicker","date","toLocaleString","dateStyle","Date","isOpen","contains","isRangePicker","close","showDateFrom","selected","formatDate","Promise","resolve","elem","input","selector","onDocumentClick","toggle","onSelectorClick","renderDateRangePicker","onRangePickerCellClick","showDate1","showDate2","setMonth","getMonth","renderCalendar","controlLeft","querySelector","controlRight","prev","next","renderHighlight","cell","value","cellDate","toISOString","selectedFromElem","selectedToElem","showDate","setDate","monthStr","month","table","dayIndex","getDay","getDate","dateValue","selectingFrom","dispatchEvent","CustomEvent","bubbles","detail","Page","updateTableComponent","components","sortableTable","getTime","rangePicker","onDateSelect","removeEventListeners","initComponents","renderComponents","Object","keys","forEach","component","root","$element","values","params","response","fetch","toString","err","FetchError","ok","errorText","statusText","json","error","message","Error","super","window","reason","alert"],"mappings":"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","file":"sales-index-js-6.js","sourcesContent":["import fetchJson from \"../../utils/fetch-json.js\";\n\nconst BACKEND_URL = process.env.BACKEND_URL;\n\nexport default class SortableTable {\n  element;\n  subElements = {};\n  data = [];\n  loading = false;\n  step = 20;\n  start = 1;\n  end = this.start + this.step;\n\n  onWindowScroll = async () => {\n    const { bottom } = this.element.getBoundingClientRect();\n    const { id, order } = this.sorted;\n\n    if (bottom < document.documentElement.clientHeight && !this.loading && !this.isSortLocally) {\n      this.start = this.end;\n      this.end = this.start + this.step;\n\n      this.loading = true;\n\n      const data = await this.loadData(id, order, this.start, this.end);\n      this.update(data);\n\n      this.loading = false;\n    }\n  };\n\n  onSortClick = event => {\n    const column = event.target.closest('[data-sortable=\"true\"]');\n    const toggleOrder = order => {\n      const orders = {\n        asc: 'desc',\n        desc: 'asc'\n      };\n\n      return orders[order];\n    };\n\n    if (column) {\n      const { id, order } = column.dataset;\n      const newOrder = toggleOrder(order);\n\n      this.sorted = {\n        id,\n        order: newOrder\n      };\n\n      column.dataset.order = newOrder;\n      column.append(this.subElements.arrow);\n\n      if (this.isSortLocally) {\n        this.sortLocally(id, newOrder);\n      } else {\n        this.start = 1;\n        this.end = 1 + this.step;\n        this.sortOnServer(id, newOrder, this.start, this.end);\n      }\n    }\n  };\n\n  constructor(headersConfig = [], {\n    url = '',\n    sorted = {\n      id: headersConfig.find(item => item.sortable).id,\n      order: 'asc'\n    },\n    isSortLocally = false,\n    step = 20,\n    start = 1,\n    end = start + step,\n    from = null,\n    to = null,\n    filtered = null,\n  } = {}) {\n\n    this.headersConfig = headersConfig;\n    this.url = new URL(url, BACKEND_URL);\n    this.sorted = sorted;\n    this.isSortLocally = isSortLocally;\n    this.step = step;\n    this.start = start;\n    this.end = end;\n    //In ISO format, use Date.toISOString\n    this.from = from;\n    this.to = to;\n    this.filtered = filtered;\n\n    this.render();\n  }\n\n  async render() {\n    const {id, order} = this.sorted;\n    const wrapper = document.createElement('div');\n\n    wrapper.innerHTML = this.getTable();\n\n    const element = wrapper.firstElementChild;\n\n    this.element = element;\n    this.subElements = this.getSubElements(element);\n\n    const data = await this.loadData(id, order, this.start, this.end);\n\n    this.renderRows(data);\n    this.initEventListeners();\n    return this.element;\n  }\n\n  async loadData (id, order, start = this.start, end = this.end) {\n    if (this.from && this.to) {\n      this.url.searchParams.set('createdAt_gte', this.from);\n      this.url.searchParams.set('createdAt_lte', this.to);\n    }\n\n    if (this.filtered) {\n      const { price_gte, price_lte, title_like, status } = this.filtered;\n\n      this.url.searchParams.set('price_gte', price_gte);\n      this.url.searchParams.set('price_lte', price_lte);\n      \n      if (title_like) {\n        this.url.searchParams.set('title_like', title_like);\n      }\n\n      if (status) {\n        this.url.searchParams.set('status', status);\n      }\n\n    }\n\n    this.url.searchParams.set('_sort', id);\n    this.url.searchParams.set('_order', order);\n    this.url.searchParams.set('_start', start);\n    this.url.searchParams.set('_end', end);\n\n    this.element.classList.add('sortable-table_loading');\n    \n\n    const data = await fetchJson(this.url);\n\n    this.element.classList.remove('sortable-table_loading');\n\n    return data;\n  }\n\n  addRows (data) {\n    this.data = data;\n    this.subElements.body.innerHTML = this.getTableRows(data);\n\n    if (data.length) {\n      this.element.classList.remove('sortable-table_empty');\n    } else {\n      this.element.classList.add('sortable-table_empty');\n    }\n  }\n\n  update (data) {\n    const rows = document.createElement('div');\n\n    this.data = [...this.data, ...data];\n    rows.innerHTML = this.getTableRows(data);\n\n    this.subElements.body.append(...rows.childNodes);\n    return rows;\n  }\n\n  getTableHeader() {\n    return `<div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">\n      ${this.headersConfig.map(item => this.getHeaderRow(item)).join('')}\n    </div>`;\n  }\n\n  getHeaderRow ({id, title, sortable}) {\n    const order = this.sorted.id === id ? this.sorted.order : 'asc';\n\n    return `\n      <div class=\"sortable-table__cell\" data-id=\"${id}\" data-sortable=\"${sortable}\" data-order=\"${order}\">\n        <span>${title}</span>\n        ${this.getHeaderSortingArrow(id)}\n      </div>\n    `;\n  }\n\n  getHeaderSortingArrow (id) {\n    const isOrderExist = this.sorted.id === id ? this.sorted.order : '';\n\n    return isOrderExist\n      ? `<span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\n          <span class=\"sort-arrow\"></span>\n        </span>`\n      : '';\n  }\n\n  getTableBody(data) {\n    return `\n      <div data-element=\"body\" class=\"sortable-table__body\">\n        ${this.getTableRows(data)}\n      </div>`;\n  }\n\n  getTableRows (data) {\n    return data.map(item => `\n      <a href=\"/products/${item.id}\" class=\"sortable-table__row\">\n        ${this.getTableRow(item, data)}\n      </a>`\n    ).join('');\n  }\n\n  getTableRow (item) {\n    const cells = this.headersConfig.map(({id, template}) => {\n      return {\n        id,\n        template\n      }\n    });\n\n    return cells.map(({id, template}) => {\n      return template\n        ? template(item[id])\n        : `<div class=\"sortable-table__cell\">${item[id]}</div>`\n    }).join('');\n  }\n\n  getTable() {\n    return `\n      <div class=\"sortable-table\">\n        ${this.getTableHeader()}\n        ${this.getTableBody(this.data)}\n\n        <div data-element=\"loading\" class=\"loading-line sortable-table__loading-line\"></div>\n\n        <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\n          No data\n        </div>\n      </div>`;\n  }\n\n  initEventListeners () {\n    this.subElements.header.addEventListener('pointerdown', this.onSortClick);\n    document.addEventListener('scroll', this.onWindowScroll);\n  }\n\n  sortLocally (id, order) {\n    const sortedData = this.sortData(id, order);\n\n    this.subElements.body.innerHTML = this.getTableBody(sortedData);\n  }\n\n  async sortOnServer (id, order, start, end) {\n    const data = await this.loadData(id, order, start, end);\n\n    this.renderRows(data);\n  }\n\n  renderRows (data) {\n    if (data.length) {\n      this.element.classList.remove('sortable-table_empty');\n      this.addRows(data);\n    } else {\n      this.element.classList.add('sortable-table_empty');\n    }\n  }\n\n  sortData (id, order) {\n    const arr = [...this.data];\n    const column = this.headersConfig.find(item => item.id === id);\n    const {sortType, customSorting} = column;\n    const direction = order === 'asc' ? 1 : -1;\n\n    return arr.sort((a, b) => {\n      switch (sortType) {\n        case 'number':\n          return direction * (a[id] - b[id]);\n        case 'string':\n          return direction * a[id].localeCompare(b[id], 'ru');\n        case 'custom':\n          return direction * customSorting(a, b);\n        default:\n          return direction * (a[id] - b[id]);\n      }\n    });\n  }\n\n  getSubElements(element) {\n    const elements = element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  remove() {\n    this.element.remove();\n    document.removeEventListener('scroll', this.onWindowScroll);\n  }\n\n  destroy() {\n    this.remove();\n    this.subElements = {};\n  }\n}\n","export default class RangePicker {\n  element = null;\n  subElements = {};\n  selectingFrom = true;\n  selected = {\n    from: new Date(),\n    to: new Date()\n  };\n\n  static formatDate (date) {\n    return date.toLocaleString('ru', {dateStyle: 'short'})\n  }\n\n  onDocumentClick = event => {\n    const isOpen = this.element.classList.contains('rangepicker_open');\n    const isRangePicker = this.element.contains(event.target);\n\n    if (isOpen && !isRangePicker) {\n      this.close();\n    }\n  };\n\n  constructor({from = new Date(), to = new Date()} = {}) {\n    this.showDateFrom = new Date(from);\n    this.selected = {from, to};\n\n    this.render();\n  }\n\n  get template () {\n    const from = RangePicker.formatDate(this.selected.from);\n    const to = RangePicker.formatDate(this.selected.to);\n\n    return `<div class=\"rangepicker\">\n      <div class=\"rangepicker__input\" data-elem=\"input\">\n        <span data-elem=\"from\">${from}</span> -\n        <span data-elem=\"to\">${to}</span>\n      </div>\n      <div class=\"rangepicker__selector\" data-elem=\"selector\"></div>\n    </div>`;\n  }\n\n  render() {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(element);\n\n    this.initEventListeners();\n\n    return Promise.resolve(this.element);\n  }\n\n  getSubElements (element) {\n    const subElements = {};\n\n    for (const subElement of element.querySelectorAll('[data-elem]')) {\n      subElements[subElement.dataset.elem] = subElement;\n    }\n\n    return subElements;\n  }\n\n  initEventListeners () {\n    const {input, selector} = this.subElements;\n\n    document.addEventListener('click', this.onDocumentClick, true);\n    input.addEventListener('click', () => this.toggle());\n    selector.addEventListener('click', event => this.onSelectorClick(event));\n  }\n\n  toggle() {\n    this.element.classList.toggle('rangepicker_open');\n    this.renderDateRangePicker();\n  }\n\n  onSelectorClick({target}) {\n    if (target.classList.contains('rangepicker__cell')) {\n      this.onRangePickerCellClick(target);\n    }\n  }\n\n  close() {\n    this.element.classList.remove('rangepicker_open');\n  }\n\n  renderDateRangePicker() {\n    const showDate1 = new Date(this.showDateFrom);\n    const showDate2 = new Date(this.showDateFrom);\n    const { selector } = this.subElements;\n\n    showDate2.setMonth(showDate2.getMonth() + 1);\n\n    selector.innerHTML = `\n      <div class=\"rangepicker__selector-arrow\"></div>\n      <div class=\"rangepicker__selector-control-left\"></div>\n      <div class=\"rangepicker__selector-control-right\"></div>\n      ${this.renderCalendar(showDate1)}\n      ${this.renderCalendar(showDate2)}\n    `;\n\n    const controlLeft = selector.querySelector('.rangepicker__selector-control-left');\n    const controlRight = selector.querySelector('.rangepicker__selector-control-right');\n\n    controlLeft.addEventListener('click', () => this.prev());\n    controlRight.addEventListener('click', () => this.next());\n\n    this.renderHighlight();\n  }\n\n  prev () {\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() - 1);\n    this.renderDateRangePicker();\n  }\n\n  next () {\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() + 1);\n    this.renderDateRangePicker();\n  }\n\n  renderHighlight() {\n    const { from, to } = this.selected;\n\n    for (const cell of this.element.querySelectorAll('.rangepicker__cell')) {\n      const { value } = cell.dataset;\n      const cellDate = new Date(value);\n\n      cell.classList.remove('rangepicker__selected-from');\n      cell.classList.remove('rangepicker__selected-between');\n      cell.classList.remove('rangepicker__selected-to');\n\n      if (from && value === from.toISOString()) {\n        cell.classList.add('rangepicker__selected-from');\n      } else if (to && value === to.toISOString()) {\n        cell.classList.add('rangepicker__selected-to');\n      } else if (from && to && cellDate >= from && cellDate <= to) {\n        cell.classList.add('rangepicker__selected-between');\n      }\n    }\n\n    if (from) {\n      const selectedFromElem = this.element.querySelector(`[data-value=\"${from.toISOString()}\"]`);\n      if (selectedFromElem) {\n        selectedFromElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-from');\n      }\n    }\n\n    if (to) {\n      const selectedToElem = this.element.querySelector(`[data-value=\"${to.toISOString()}\"]`);\n      if (selectedToElem) {\n        selectedToElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-to');\n      }\n    }\n  }\n\n  renderCalendar(showDate) {\n    const date = new Date(showDate);\n    const getGridStartIndex = dayIndex => {\n      const index = dayIndex === 0 ? 6 : (dayIndex - 1); // make Sunday (0) the last day\n      return index + 1;\n    };\n\n    date.setDate(1);\n\n    const monthStr = date.toLocaleString('ru', {month: 'long'});\n\n    let table = `<div class=\"rangepicker__calendar\">\n      <div class=\"rangepicker__month-indicator\">\n        <time datetime=${monthStr}>${monthStr}</time>\n      </div>\n      <div class=\"rangepicker__day-of-week\">\n        <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div><div>Пт</div><div>Сб</div><div>Вс</div>\n      </div>\n      <div class=\"rangepicker__date-grid\">\n    `;\n\n    table += `\n      <button type=\"button\"\n        class=\"rangepicker__cell\"\n        data-value=\"${date.toISOString()}\"\n        style=\"--start-from: ${getGridStartIndex(date.getDay())}\">\n          ${date.getDate()}\n      </button>`;\n\n    date.setDate(2);\n\n    while (date.getMonth() === showDate.getMonth()) {\n      table += `\n        <button type=\"button\"\n          class=\"rangepicker__cell\"\n          data-value=\"${date.toISOString()}\">\n            ${date.getDate()}\n        </button>`;\n\n      date.setDate(date.getDate() + 1);\n    }\n\n    table += '</div></div>';\n\n    return table;\n  }\n\n  onRangePickerCellClick(target) {\n    const { value } = target.dataset;\n\n    if (value) {\n      const dateValue = new Date(value);\n\n      if (this.selectingFrom) {\n        this.selected = {\n          from: dateValue,\n          to:   null\n        };\n        this.selectingFrom = false;\n        this.renderHighlight();\n      } else {\n        if (dateValue > this.selected.from) {\n          this.selected.to = dateValue;\n        } else {\n          this.selected.to = this.selected.from;\n          this.selected.from = dateValue;\n        }\n\n        this.selectingFrom = true;\n        this.renderHighlight();\n      }\n\n      if (this.selected.from && this.selected.to) {\n        this.dispatchEvent();\n        this.close();\n        this.subElements.from.innerHTML = RangePicker.formatDate(this.selected.from);\n        this.subElements.to.innerHTML = RangePicker.formatDate(this.selected.to)\n      }\n    }\n  }\n\n  dispatchEvent () {\n    this.element.dispatchEvent(new CustomEvent('date-select', {\n      bubbles: true,\n      detail:  this.selected\n    }));\n  }\n\n  remove () {\n    this.element.remove();\n    document.removeEventListener('click', this.onDocumentClick, true);\n  }\n\n  destroy() {\n    this.remove();\n    this.element = null;\n    this.subElements = {};\n    this.selectingFrom = true;\n    this.selected = {\n      from: new Date(),\n      to: new Date()\n    };\n\n    return this;\n  }\n}\n","const header = [\n  {\n    id: 'id',\n    title: 'ID',\n    sortable: true,\n    sortType: 'number'\n  },\n  {\n    id: 'user',\n    title: 'Клиент',\n    sortable: true,\n    sortType: 'string'\n  },\n  {\n    id: 'createdAt',\n    title: 'Дата',\n    sortable: true,\n    sortType: 'string',\n    template: data => {\n      return `<div class=\"sortable-table__cell\">\n          ${data ? new Date(data).toLocaleString() : ''}\n        </div>`;\n    }\n  },\n  {\n    id: 'totalCost',\n    title: 'Стоимость',\n    sortable: true,\n    sortType: 'number'\n  },\n  {\n    id: 'delivery',\n    title: 'Статус',\n    sortable: true,\n    sortType: 'number',\n    template: data => {\n      return `<div class=\"sortable-table__cell\">\n          ${data > 0 ? 'Доставлено' : 'В пути'}\n        </div>`;\n    }\n  },\n];\n\nexport default header;","import SortableTable from '../../components/sortable-table/index.js';\nimport RangePicker from '../../components/range-picker/index.js';\nimport header from './header.js';\nimport fetchJson from '../../utils/fetch-json.js';\n\nexport default class Page {\n  element;\n  subElements = {};\n  components = {};\n\n  onDateSelect = async (event) => {\n    const { from, to } = event.detail;\n    await this.updateTableComponent(from, to);\n  }\n\n  async updateTableComponent (from, to) {\n    const data = await fetchJson(`${process.env.BACKEND_URL}api/rest/orders?createdAt_gte=${from.toISOString()}&createdAt_lte=${to.toISOString()}&_sort=createdAt&_order=desc&_start=0&_end=30`);\n    this.components.sortableTable.addRows(data);\n    // Preserve time range for server side sorting\n    this.components.sortableTable.from = from.toISOString();\n    this.components.sortableTable.to = to.toISOString();\n  }\n\n  async initComponents () {\n    const to = new Date();\n    const from = new Date(to.getTime() - (30 * 24 * 60 * 60 * 1000));\n\n    const rangePicker = new RangePicker({\n      from,\n      to\n    });\n\n    const sortableTable = new SortableTable(header, {\n      url: \"api/rest/orders\",\n      from: from.toISOString(),\n      to: to.toISOString(),\n      sorted: {\n        id: \"createdAt\",\n        order: 'desc'\n      }\n    });\n\n    this.components.sortableTable = sortableTable;\n    this.components.rangePicker = rangePicker;\n  }\n\n  get template () {\n    return `<div class=\"sales\">\n      <div class=\"content__top-panel\">\n        <h2 class=\"page-title\">Sales</h2>\n        <!-- RangePicker component -->\n        <div data-element=\"rangePicker\"></div>\n      </div>\n      <div data-element=\"sortableTable\">\n        <!-- sortable-table component -->\n      </div>\n    </div>`;\n  }\n\n  initEventListeners() {\n    document.addEventListener(\"date-select\", this.onDateSelect);\n  }\n\n  removeEventListeners() {\n    document.removeEventListener(\"date-select\", this.onDateSelect);\n  }\n\n  async render () {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n\n    await this.initComponents();\n\n    this.renderComponents();\n\n    this.subElements = this.getSubElements(this.element);\n\n    this.initEventListeners();\n\n    return this.element;\n  }\n\n  renderComponents () {\n    Object.keys(this.components).forEach(component => {\n      const root = this.subElements[component];\n      const { element } = this.components[component];\n\n      root.append(element);\n    });\n  }\n\n  getSubElements ($element) {\n    const elements = $element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  destroy () {\n    for (const component of Object.values(this.components)) {\n      component.destroy();\n    }\n    this.removeEventListeners();\n  }\n}\n","// same as fetch, but throws FetchError in case of errors\n// status >= 400 is an error\n// network error / json error are errors\n\nexport default async function(url, params) {\n  let response;\n\n  try {\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\n    response = await fetch(url.toString(), params);\n  } catch(err) {\n    throw new FetchError(response, \"Network error has occurred.\");\n  }\n\n  let body;\n\n  if (!response.ok) {\n    let errorText = response.statusText; // Not Found (for 404)\n\n    try {\n      body = await response.json();\n\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\n    } catch (error) { /* ignore failed body */ }\n\n    let message = `Error ${response.status}: ${errorText}`;\n\n    throw new FetchError(response, body, message);\n  }\n\n  try {\n    return await response.json();\n  } catch(err) {\n    throw new FetchError(response, null, err.message);\n  }\n}\n\nexport class FetchError extends Error {\n  name = \"FetchError\";\n\n  constructor(response, body, message) {\n    super(message);\n    this.response = response;\n    this.body = body;\n  }\n}\n\n// handle uncaught failed fetch through\nwindow.addEventListener('unhandledrejection', event => {\n  if (event.reason instanceof FetchError) {\n    alert(event.reason.message);\n  }\n});\n\n"],"sourceRoot":""}